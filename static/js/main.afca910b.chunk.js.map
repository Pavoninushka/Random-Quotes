{"version":3,"sources":["App.js","index.js"],"names":["initialQuote","quote","author","Quote","props","className","id","currentQuote","App","useState","setCurrentQuote","quotes","setQuotes","useEffect","fetch","then","response","json","data","target","href","encodeURIComponent","onClick","length","randomNumber","Math","floor","random","randomQuote","ReactDOM","render","document","getElementById"],"mappings":"4KAGMA,EAAe,CACnBC,MAAO,0BACPC,OAAQ,oBAiEJC,EAAQ,SAACC,GACb,OACE,mCACE,6BAAYC,UAAU,aAAtB,UACE,mBAAGA,UAAU,qBACb,sBAAMC,GAAG,OAAT,SAAiBF,EAAMG,aAAaN,QACpC,mBAAGI,UAAU,yBAEf,6BAAYC,GAAG,SAAf,eAA2BF,EAAMG,aAAaL,cAMrCM,EA5EH,WAAO,IAAD,EACwBC,mBAAST,GADjC,mBACTO,EADS,KACKG,EADL,OAEYD,mBAAS,IAFrB,mBAETE,EAFS,KAEDC,EAFC,KAqBhB,OAjBAC,qBAAU,WACRC,MACE,0IAECC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUA,EAAKP,UACpBI,MAAK,SAACJ,GAAD,OAAYC,EAAUD,QAC7B,IAWD,sBAAMN,UAAU,yDAAhB,SACE,sBAAKC,GAAG,OAAOD,UAAU,sCAAzB,UACE,oBAAIA,UAAU,2BAA2BC,GAAG,UAA5C,uCAGA,sBAAKA,GAAG,YAAYD,UAAU,cAA9B,UACE,cAAC,EAAD,CAAOE,aAAcA,IACrB,sBAAKF,UAAU,MAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,oBACEA,UAAU,kBACVC,GAAG,cACHa,OAAO,SACPC,KACE,yCACAC,mBACE,IAAMd,EAAaN,MAAQ,KAAOM,EAAaL,QAPrD,UAWE,mBAAGG,UAAU,kBAAkB,sBAAMA,UAAU,kBAAhB,oCAInC,qBAAKA,UAAU,mBAAf,SACE,wBACEA,UAAU,kBACVC,GAAG,YACHgB,QArCd,WACE,GAAsB,IAAlBX,EAAOY,OAAc,CACvB,IAAIC,EAAeC,KAAKC,MAAMD,KAAKE,SAAWhB,EAAOY,QACjDK,EAAcjB,EAAOa,GACzBd,EAAgBkB,KA8BR,qC,YClDdC,IAASC,OAAO,cAAC,EAAD,IAAgBC,SAASC,eAAe,S","file":"static/js/main.afca910b.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\n\nconst initialQuote = {\n  quote: \"Be unique, this matters\",\n  author: \"Galina Karateeva\"\n};\n\nconst App = () => {\n  const [currentQuote, setCurrentQuote] = useState(initialQuote);\n  const [quotes, setQuotes] = useState([]);\n\n  useEffect(() => {\n    fetch(\n      \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\n    )\n      .then((response) => response.json())\n      .then((data) => data.quotes)\n      .then((quotes) => setQuotes(quotes));\n  }, []);\n\n  function getNewQuote() {\n    if (quotes.length !== 0) {\n      let randomNumber = Math.floor(Math.random() * quotes.length);\n      let randomQuote = quotes[randomNumber];\n      setCurrentQuote(randomQuote);\n    }\n  }\n\n  return (\n    <main className=\"d-flex justify-content-center align-items-center h-100\">\n      <div id=\"main\" className=\"border border-secondary rounded p-3\">\n        <h1 className=\"text-primary text-center\" id=\"heading\">\n          Here is your daily quote:\n        </h1>\n        <div id=\"quote-box\" className=\"text-center\">\n          <Quote currentQuote={currentQuote} />\n          <div className=\"row\">\n            <div className=\"col-md-1 button\">\n              <a\n                className=\"btn btn-primary\"\n                id=\"tweet-quote\"\n                target=\"_blank\"\n                href={\n                  \"https://twitter.com/intent/tweet?text=\" +\n                  encodeURIComponent(\n                    '\"' + currentQuote.quote + '\" ' + currentQuote.author\n                  )\n                }\n              >\n                <i className=\"fa fa-twitter\" /><span className=\"visually-hidden\">Tweet this quote.</span>\n              </a>\n            </div>\n\n            <div className=\"col-md-11 button\">\n              <button\n                className=\"btn btn-primary\"\n                id=\"new-quote\"\n                onClick={getNewQuote}\n              >\n                New Quote\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nconst Quote = (props) => {\n  return (\n    <figure>\n      <blockquote className=\"quote-text\" >\n        <i className=\"fa fa-quote-left\" />\n        <span id=\"text\">{props.currentQuote.quote}</span>\n        <i className=\"fa fa-quote-right\" />\n      </blockquote>\n      <figcaption id=\"author\">- {props.currentQuote.author}</figcaption>\n\n    </figure>\n  );\n};\n\nexport default App;","import ReactDOM from 'react-dom';\nimport AppWrapper from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nReactDOM.render(<AppWrapper />, document.getElementById(\"app\"));\n"],"sourceRoot":""}